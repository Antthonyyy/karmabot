# СДЕЛАЙ И ЗАТКНИСЬ

Цель: голосовое распознавание должно работать (uk | ru | en) и НЕ жрать кредиты.

────────────────────────────────────────────────────────
1. BACK-END  (server/routes/audio.ts)
────────────────────────────────────────────────────────

- Оставь один (!) POST /api/audio/transcribe внутри registerRoutes.
- Используй multer.memoryStorage и **audio** как поле FormData.
- Код 1-в-1:

import multer from 'multer';
import { Readable } from 'stream';
import { openai } from '../clients/openai';

const upload = multer({ storage: multer.memoryStorage() });

router.post(
  '/api/audio/transcribe',
  auth,
  upload.single('audio'),
  async (req, res) => {
    try {
      if (!req.file) return res.status(400).json({ error: 'NO_FILE' });

      const language = (req.body.language || 'uk').slice(0, 2);

      const rsp = await openai.audio.transcriptions.create({
        model: 'whisper-1',
        file: Readable.from(req.file.buffer),
        filename: req.file.originalname || 'voice.webm',
        language
      });

      return res.json({ text: rsp.text });
    } catch (e) {
      console.error('Whisper error', e?.message);
      return res.status(500).json({ error: 'TRANSCRIBE_FAIL' });
    }
  }
);

────────────────────────────────────────────────────────
2. FRONT-END  (client/src/components/VoiceRecorder.tsx)
────────────────────────────────────────────────────────

async function sendAudio(blob: Blob) {
  const file = new File([blob], 'voice.webm', { type: 'audio/webm' });
  const fd = new FormData();
  fd.append('audio', file);                         // ДОЛЖНО совпадать!
  fd.append('language', i18n.language.slice(0, 2)); // 'uk' | 'ru' | 'en'

  const res = await fetch('/api/audio/transcribe', {
    method: 'POST',
    headers: { Authorization: `Bearer ${token}` },
    body: fd
  });

  const data = await res.json();
  if (!res.ok) throw new Error(data.error || 'TRANSCRIBE_ERROR');
  return data.text;
}

────────────────────────────────────────────────────────
3. Тест (один раз, без циклов)
────────────────────────────────────────────────────────

- DevTools → Network: файл voice.webm >0 Б отправился.
- Ответ 200 { text: '...' }.
- Текст вставился в поле описания.
- Если нет файла → ошибка NO_FILE; если Whisper сломался → TRANSCRIBE_FAIL.

────────────────────────────────────────────────────────
4. Запрещено
────────────────────────────────────────────────────────
- НЕ трогай PWA, Push, Telegram.
- Никаких новых зависимостей.
- Никаких «дополнительных проверок и перезапусков» после успешного теста.
- Один commit, один run. Всё.

// client/src/App.tsx
import { useEffect, useState } from "react";
import { initializeAuth, isTelegramWebApp } from "./utils/fetchUser";
import { useAuth } from "./hooks/useAuth";

export default function App() {
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const { authUtils } = useAuth();

  useEffect(() => {
    const initAuth = async () => {
      try {
        console.log("üöÄ Starting authentication...");

        // –ü—Ä–æ–±—É–µ–º –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è
        const authData = await initializeAuth();

        if (authData) {
          console.log("‚úÖ Authentication successful");
          // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ localStorage —á–µ—Ä–µ–∑ fetchUser
        } else if (!isTelegramWebApp()) {
          // –ù–µ –≤ Telegram - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
          setError("not-in-telegram");
        } else {
          // –í Telegram, –Ω–æ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö
          setError("no-user-data");
        }
      } catch (err) {
        console.error("‚ùå Auth error:", err);
        setError(err.message || "Authentication failed");
      } finally {
        setLoading(false);
      }
    };

    initAuth();
  }, []);

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
  if (loading) {
    return (
      <div className="flex items-center justify-center min-h-screen">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto"></div>
          <p className="mt-4 text-gray-600">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>
        </div>
      </div>
    );
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É "–Ω–µ –≤ Telegram"
  if (error === "not-in-telegram") {
    return (
      <div className="flex items-center justify-center min-h-screen p-4">
        <div className="max-w-md text-center">
          <h1 className="text-2xl font-bold mb-4">–í—ñ–¥–∫—Ä–∏–π—Ç–µ –≤ Telegram</h1>
          <p className="text-gray-600 mb-6">
            –¶–µ–π –¥–æ–¥–∞—Ç–æ–∫ –ø—Ä–∞—Ü—é—î —Ç—ñ–ª—å–∫–∏ –≤ Telegram. –í—ñ–¥–∫—Ä–∏–π—Ç–µ –π–æ–≥–æ —á–µ—Ä–µ–∑ –±–æ—Ç–∞.
          </p>
          <div className="space-y-4">
            <a
              href="https://t.me/YOUR_BOT_USERNAME"
              className="inline-block bg-blue-500 text-white px-6 py-3 rounded-lg"
            >
              –í—ñ–¥–∫—Ä–∏—Ç–∏ –≤ Telegram
            </a>
            <div className="mt-4">
              <img
                src="/qr-code.png"
                alt="QR Code"
                className="mx-auto w-48 h-48"
              />
              <p className="text-sm text-gray-500 mt-2">
                –°–∫–∞–Ω—É–π—Ç–µ QR-–∫–æ–¥ –≤ Telegram
              </p>
            </div>
          </div>
        </div>
      </div>
    );
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏
  if (error) {
    return (
      <div className="flex items-center justify-center min-h-screen p-4">
        <div className="max-w-md text-center">
          <h1 className="text-2xl font-bold mb-4 text-red-600">–ü–æ–º–∏–ª–∫–∞</h1>
          <p className="text-gray-600">{error}</p>
          <button
            onClick={() => window.location.reload()}
            className="mt-4 bg-blue-500 text-white px-6 py-2 rounded-lg"
          >
            –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ –∑–Ω–æ–≤—É
          </button>
        </div>
      </div>
    );
  }

  const user = authUtils.getUser();

  // –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
  return (
    <div className="min-h-screen bg-gray-50">
      <header className="bg-white shadow-sm p-4">
        <div className="flex justify-between items-center">
          <h1 className="text-xl font-bold">Karma Tracker</h1>
          <div className="text-sm text-gray-600">
            {user?.firstName} {user?.lastName}
          </div>
        </div>
      </header>

      <main className="p-4">
        {/* –í–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
        <div className="bg-white rounded-lg p-6 shadow">
          <h2 className="text-lg font-semibold mb-4">
            –õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ, {user?.firstName}!
          </h2>
          <p className="text-gray-600">–í–∞—à Telegram ID: {user?.telegramId}</p>
        </div>
      </main>
    </div>
  );
}

export function checkEnvVariables() {
  const required = [
    'OPENAI_API_KEY',
    'WAYFORPAY_MERCHANT', 
    'WAYFORPAY_SECRET',
    'FRONTEND_URL',
    'JWT_SECRET',
    'DATABASE_URL',
    'TELEGRAM_BOT_TOKEN'
  ];
  
  const missing = required.filter(key => !process.env[key]);
  
  if (missing.length > 0) {
    console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:', missing);
    console.log('üìù –î–æ–±–∞–≤—å—Ç–µ –∏—Ö –≤ Replit Secrets –∏–ª–∏ .env —Ñ–∞–π–ª');
    missing.forEach(key => {
      console.log(`- ${key}`);
    });
    return false;
  }
  
  console.log('‚úÖ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
  return true;
}

export function logEnvStatus() {
  const envVars = [
    'OPENAI_API_KEY',
    'WAYFORPAY_MERCHANT', 
    'WAYFORPAY_SECRET',
    'FRONTEND_URL',
    'JWT_SECRET',
    'DATABASE_URL',
    'TELEGRAM_BOT_TOKEN'
  ];
  
  console.log('\nüîç –°—Ç–∞—Ç—É—Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
  envVars.forEach(key => {
    const value = process.env[key];
    if (value) {
      console.log(`‚úÖ ${key}: ${value.length > 20 ? value.substring(0, 20) + '...' : value}`);
    } else {
      console.log(`‚ùå ${key}: –Ω–µ –∑–∞–¥–∞–Ω–æ`);
    }
  });
  console.log('');
}

// –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
export function getAppConfig() {
  return {
    openai: {
      apiKey: process.env.OPENAI_API_KEY,
      available: !!process.env.OPENAI_API_KEY
    },
    wayforpay: {
      merchant: process.env.WAYFORPAY_MERCHANT,
      secret: process.env.WAYFORPAY_SECRET,
      available: !!(process.env.WAYFORPAY_MERCHANT && process.env.WAYFORPAY_SECRET)
    },
    app: {
      frontendUrl: process.env.FRONTEND_URL,
      jwtSecret: process.env.JWT_SECRET,
      databaseUrl: process.env.DATABASE_URL
    },
    telegram: {
      botToken: process.env.TELEGRAM_BOT_TOKEN,
      available: !!process.env.TELEGRAM_BOT_TOKEN
    }
  };
}
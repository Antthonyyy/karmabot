import TelegramBot from "node-telegram-bot-api";
import { authorizeSession } from "./auth-sessions.js";

const token = process.env.TELEGRAM_BOT_TOKEN;

if (token) {
  const bot = new TelegramBot(token, { polling: true });

  // Time-based personalized greetings
  function getGreeting(name: string): string {
    const now = new Date();
    const hour = now.getHours();

    const morningGreetings = [
      `–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, ${name}! ‚òÄÔ∏è –ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å –¥–µ–Ω—å —Å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏?`,
      `–ü—Ä–∏–≤–µ—Ç, ${name}! üåÖ –ù–æ–≤—ã–π –¥–µ–Ω—å ‚Äî –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —Ä–æ—Å—Ç–∞!`,
      `–£—Ç—Ä–æ, ${name}! ‚ú® –î–∞–≤–∞–π—Ç–µ –Ω–∞–ø–æ–ª–Ω–∏–º —ç—Ç–æ—Ç –¥–µ–Ω—å –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç—å—é`,
      `–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, ${name}! üåª –í—Ä–µ–º—è –¥–ª—è —É—Ç—Ä–µ–Ω–Ω–∏—Ö —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–π`,
    ];

    const dayGreetings = [
      `–î–æ–±—Ä—ã–π –¥–µ–Ω—å, ${name}! üåû –ö–∞–∫ –ø—Ä–æ—Ö–æ–¥–∏—Ç –≤–∞—à–∞ –ø—Ä–∞–∫—Ç–∏–∫–∞?`,
      `–ü—Ä–∏–≤–µ—Ç, ${name}! ‚≠ê –í—Ä–µ–º—è –¥–ª—è –¥–Ω–µ–≤–Ω–æ–π —Ä–µ—Ñ–ª–µ–∫—Å–∏–∏`,
      `–î–µ–Ω—å –¥–æ–±—Ä—ã–π, ${name}! üåà –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É –Ω–∞–¥ —Å–æ–±–æ–π`,
      `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${name}! üí´ –ú–æ–º–µ–Ω—Ç –¥–ª—è –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏`,
    ];

    const eveningGreetings = [
      `–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä, ${name}! üåô –í—Ä–µ–º—è –ø–æ–¥–≤–µ—Å—Ç–∏ –∏—Ç–æ–≥–∏ –¥–Ω—è`,
      `–í–µ—á–µ—Ä, ${name}! üåü –ö–∞–∫ –ø—Ä–æ—à–µ–ª –≤–∞—à –¥–µ–Ω—å —Å –ø—Ä–∏–Ω—Ü–∏–ø–∞–º–∏?`,
      `–ü—Ä–∏–≤–µ—Ç, ${name}! üåÜ –í—Ä–µ–º—è –¥–ª—è –≤–µ—á–µ—Ä–Ω–∏—Ö —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–π`,
      `–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä, ${name}! ‚ú® –ó–∞–≤–µ—Ä—à–∞–µ–º –¥–µ–Ω—å —Å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å—é`,
    ];

    let greetings: string[];

    if (hour >= 5 && hour < 12) {
      greetings = morningGreetings;
    } else if (hour >= 12 && hour < 18) {
      greetings = dayGreetings;
    } else if (hour >= 18 && hour < 23) {
      greetings = eveningGreetings;
    } else {
      greetings = [`–ü—Ä–∏–≤–µ—Ç, ${name}! üåô –ü–æ–∑–¥–Ω–∏–π —á–∞—Å –¥–ª—è —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–π`];
    }

    return greetings[Math.floor(Math.random() * greetings.length)];
  }

  // Log errors
  bot.on("polling_error", (error) => {
    console.error("Telegram bot polling error:", error);
  });

  // Handle /start command with auth_SESSION_ID parameter
  bot.onText(/\/start auth_(.+)/, async (msg, match) => {
    const chatId = msg.chat.id;
    const sessionId = match[1];
    const user = msg.from;

    const success = authorizeSession(sessionId, {
      telegramId: user.id.toString(),
      firstName: user.first_name,
      lastName: user.last_name || null,
      username: user.username || null,
    });

    if (success) {
      await bot.sendMessage(
        chatId,
        "‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞!\n\n" +
          "–ü–æ–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –Ω–∞ —Å–∞–π—Ç –ö–∞—Ä–º—ñ—á–Ω–∏–π —â–æ–¥–µ–Ω–Ω–∏–∫.\n" +
          "–í—ñ–∫–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –æ–Ω–æ–≤–∏—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ.",
        { parse_mode: "HTML" },
      );
    } else {
      await bot.sendMessage(
        chatId,
        "‚ùå –ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó\n\n" +
          "–°–µ—Å—ñ—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞ –∞–±–æ –∑–∞—Å—Ç–∞—Ä—ñ–ª–∞.\n" +
          "–°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –Ω–∞ —Å–∞–π—Ç—ñ.",
        { parse_mode: "HTML" },
      );
    }
  });

  // Handle regular /start command (without parameters)
  bot.onText(/^\/start$/, async (msg) => {
    const chatId = msg.chat.id;
    await bot.sendMessage(
      chatId,
      "üëã –í—ñ—Ç–∞—é –≤ –ö–∞—Ä–º—ñ—á–Ω–æ–º—É —â–æ–¥–µ–Ω–Ω–∏–∫—É!\n\n" +
        "–¶–µ–π –±–æ—Ç –¥–æ–ø–æ–º–æ–∂–µ –≤–∞–º:\n" +
        "‚Ä¢ –ê–≤—Ç–æ—Ä–∏–∑—É–≤–∞—Ç–∏—Å—è –Ω–∞ —Å–∞–π—Ç—ñ\n" +
        "‚Ä¢ –û—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –ø—Ä–æ –ø—Ä–∏–Ω—Ü–∏–ø–∏\n\n" +
        "–î–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –ø–µ—Ä–µ–π–¥—ñ—Ç—å –Ω–∞ —Å–∞–π—Ç —Ç–∞ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å '–£–≤—ñ–π—Ç–∏ —á–µ—Ä–µ–∑ Telegram'",
      { parse_mode: "HTML" },
    );
  });

  console.log("Telegram bot started successfully");
} else {
  console.log("‚ö†Ô∏è TELEGRAM_BOT_TOKEN not found - bot disabled");
}

export { getGreeting };
